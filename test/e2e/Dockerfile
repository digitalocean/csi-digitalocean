### base build containers
FROM golang:1.12 AS builder-pre-1.16

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes --no-install-recommends rsync
RUN mkdir -p /go/src/k8s.io
WORKDIR /go/src/k8s.io

FROM golang:1.13 AS builder

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes --no-install-recommends rsync
RUN mkdir -p /go/src/k8s.io
WORKDIR /go/src/k8s.io

### Kubernetes 1.16
FROM builder AS tests-1.16
ARG SHA_1_16=c9bc6a0

RUN git clone --depth 1 --branch do-doks-1.16 https://github.com/digitalocean/kubernetes.git
RUN cd kubernetes && \
    git checkout ${SHA_1_16} && \
    make WHAT=test/e2e/e2e.test && \
    cp _output/bin/e2e.test /e2e.1.16.test

### Kubernetes 1.15
FROM builder-pre-1.16 AS tests-1.15
ARG SHA_1_15=f1b547a

RUN git clone --depth 1 --branch do-doks-1.15 https://github.com/digitalocean/kubernetes.git
RUN cd kubernetes && \
    git checkout ${SHA_1_15} && \
    make WHAT=test/e2e/e2e.test && \
    cp _output/bin/e2e.test /e2e.1.15.test

### Kubernetes 1.14
FROM builder-pre-1.16 AS tests-1.14
ARG SHA_1_14=fa04cb8

RUN git clone --depth 1 --branch do-doks-1.14 https://github.com/digitalocean/kubernetes.git
RUN cd kubernetes && \
    git checkout ${SHA_1_14} && \
    make WHAT=test/e2e/e2e.test && \
    cp _output/bin/e2e.test /e2e.1.14.test

### ginkgo and tools
FROM golang:1.13 AS tools
# See comment at the bottom on why we need tini.
ARG TINI_VERSION=0.18.0
# doctl is needed to support clusters that had their kubeconfig fetched via the
# CLI because those leverage a kubeconfig authentication plugin based on doctl.
ARG DOCTL_VERSION=1.36.0
# ginkgo is needed to run the upstream end-to-end tests.
ARG GINKGO_VERSION=1.10.3
# kubectl is needed by some tests.
ARG KUBECTL_VERSION=1.16.3

RUN curl --fail --location --output /tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini
RUN chmod u+x /tini

RUN curl --fail --location https://github.com/digitalocean/doctl/releases/download/v${DOCTL_VERSION}/doctl-${DOCTL_VERSION}-linux-amd64.tar.gz | tar -xzv
RUN cp doctl /

RUN GO111MODULE=on go get github.com/onsi/ginkgo/ginkgo@v${GINKGO_VERSION}
RUN cp bin/ginkgo /

RUN curl --fail --location --remote-name https://storage.googleapis.com/kubernetes-release/release/$(curl --fail --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
RUN chmod u+x kubectl
RUN cp kubectl /

### final test container
FROM bitnami/minideb:buster
# Certificates needed to trust the CA for any HTTPS connections to the DO API.
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes --no-install-recommends ca-certificates
COPY --from=tests-1.16 /e2e.1.16.test /
COPY --from=tests-1.15 /e2e.1.15.test /
COPY --from=tests-1.14 /e2e.1.14.test /
COPY --from=tools /tini /sbin/
COPY --from=tools /doctl /usr/local/bin/
COPY --from=tools /ginkgo /usr/local/bin/
COPY --from=tools /kubectl /usr/local/bin/
# Docker comes with built-in tini support (--init parameter) but does not allow
# to enable child process group killing
# (https://github.com/krallin/tini#process-group-killing) via "-g". We need this
# since our entrypoint script spawns child processes during multiple invocations
# of ginkgo. The usual approach of using "exec" to replace the shell does not
# work here as that would terminate the script prematurely.
# We also enable subreaping (https://github.com/krallin/tini#subreaping) to fix
# a startup warning.
# See also https://hynek.me/articles/docker-signals/ for the usual pid 1
# gotchas.
ENTRYPOINT ["/sbin/tini", "-g", "-s", "--", "/run-versioned-e2e-tests.sh"]
COPY run-versioned-e2e-tests.sh /
